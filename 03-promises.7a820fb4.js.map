{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,UAAWC,SAASC,cAAc,mBAClCC,gBAAiBF,SAASC,cAAc,kBACxCE,eAAgBH,SAASC,cAAc,iBACvCG,YAAaJ,SAASC,cAAc,oBAGtC,IAAII,EAAkB,EAClBC,EAAiB,EACjBC,EAAc,EACdC,EAAS,KAuCb,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAEpCH,EAAQ,uBAAuBH,QAAeC,OAE9CG,EAAO,sBAAsBJ,QAAeC,MAAS,GAG3D,CA/CAb,EAAKI,gBAAgBe,iBACnB,SACAC,GAAQb,EAAkBa,EAAIC,cAAcC,QAE9CtB,EAAKK,eAAec,iBAClB,SACAC,GAAQZ,EAAiBY,EAAIC,cAAcC,QAE7CtB,EAAKM,YAAYa,iBACf,SACAC,GAAQX,EAAcW,EAAIC,cAAcC,QAG1CtB,EAAKC,UAAUkB,iBAAiB,SAEhC,SAA2BC,GACzBA,EAAIG,iBAEJ,IAAK,IAAIC,EAAI,EAAGA,EAAIf,EAAae,IAAK,CACpC,MAAMX,EAAQY,OAAOlB,GAAmBC,EAAiBgB,EACzDd,EAASgB,YAAW,KAClBf,EAAca,EAAI,EAAGX,GAClBc,MAAKC,GACJC,EAAA/B,GAASgC,OAAOC,QAAQH,EAAgB,CACtCI,QAAS,KACTC,cAAc,MAGjBC,OAAMC,GACLN,EAAA/B,GAASgC,OAAOM,QAAQD,EAAc,CACpCH,QAAS,IACTC,cAAc,KAChB,GAEHpB,EACL,CACF","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  submitBtn: document.querySelector('[type=\"submit\"]'),\n  firstDelayInput: document.querySelector('[name=\"delay\"]'),\n  delayStepInput: document.querySelector('[name=\"step\"]'),\n  amountInput: document.querySelector('[name=\"amount\"]'),\n};\n\nlet firstDelayValue = 0;\nlet delayStepValue = 0;\nlet amountValue = 0;\nlet timeId = null;\nrefs.firstDelayInput.addEventListener(\n  'input',\n  evt => (firstDelayValue = evt.currentTarget.value)\n);\nrefs.delayStepInput.addEventListener(\n  'input',\n  evt => (delayStepValue = evt.currentTarget.value)\n);\nrefs.amountInput.addEventListener(\n  'input',\n  evt => (amountValue = evt.currentTarget.value)\n);\n\nrefs.submitBtn.addEventListener('click', onSumbitBtnTarget);\n\nfunction onSumbitBtnTarget(evt) {\n  evt.preventDefault();\n\n  for (let i = 0; i < amountValue; i++) {\n    const delay = Number(firstDelayValue) + delayStepValue * i;\n    timeId = setTimeout(() => {\n      createPromise(i + 1, delay)\n        .then(messageSuccess =>\n          Notiflix.Notify.success(messageSuccess, {\n            timeout: 3500,\n            clickToClose: true,\n          })\n        )\n        .catch(messageError =>\n          Notiflix.Notify.failure(messageError, {\n            timeout: 3000,\n            clickToClose: true,\n          })\n        );\n    }, delay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  });\n}\n"],"names":["$4vA6L","parcelRequire","$75aa520dfb7f3d3e$var$refs","submitBtn","document","querySelector","firstDelayInput","delayStepInput","amountInput","$75aa520dfb7f3d3e$var$firstDelayValue","$75aa520dfb7f3d3e$var$delayStepValue","$75aa520dfb7f3d3e$var$amountValue","$75aa520dfb7f3d3e$var$timeId","$75aa520dfb7f3d3e$var$createPromise","position","delay","Promise","resolve","reject","Math","random","addEventListener","evt","currentTarget","value","preventDefault","i","Number","setTimeout","then","messageSuccess","$parcel$interopDefault","Notify","success","timeout","clickToClose","catch","messageError","failure"],"version":3,"file":"03-promises.7a820fb4.js.map"}